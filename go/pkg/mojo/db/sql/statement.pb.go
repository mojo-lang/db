// Code generated by mojo. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: mojo/db/sql/statement.proto

package sql

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Statement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Statement:
	//	*Statement_AlterTableStmt
	//	*Statement_AnalyzeSmt
	//	*Statement_AttachStmt
	//	*Statement_BeginStmt
	//	*Statement_CommitStmt
	//	*Statement_CreateIndexStmt
	//	*Statement_CreateTableStmt
	//	*Statement_CreateTriggerStmt
	//	*Statement_CreateViewStmt
	//	*Statement_CreateVirtualTableStmt
	//	*Statement_DeleteStmt
	//	*Statement_DetachStmt
	//	*Statement_DropStmt
	//	*Statement_EndStmt
	//	*Statement_InsertStmt
	//	*Statement_PragmaStmt
	//	*Statement_ReindexStmt
	//	*Statement_ReleaseStmt
	//	*Statement_RollbackStmt
	//	*Statement_SelectStmt
	//	*Statement_UpdateStmt
	//	*Statement_VacuumStmt
	Statement isStatement_Statement `protobuf_oneof:"statement" json:"statement,omitempty"`
}

func (x *Statement) Reset() {
	*x = Statement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_db_sql_statement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement) ToText() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_db_sql_statement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_mojo_db_sql_statement_proto_rawDescGZIP(), []int{0}
}

func (m *Statement) GetStatement() isStatement_Statement {
	if m != nil {
		return m.Statement
	}
	return nil
}

func (x *Statement) GetAlterTableStmt() *AlterTableStmt {
	if x, ok := x.GetStatement().(*Statement_AlterTableStmt); ok {
		return x.AlterTableStmt
	}
	return nil
}

func (x *Statement) GetAnalyzeSmt() *AnalyzeSmt {
	if x, ok := x.GetStatement().(*Statement_AnalyzeSmt); ok {
		return x.AnalyzeSmt
	}
	return nil
}

func (x *Statement) GetAttachStmt() *AttachStmt {
	if x, ok := x.GetStatement().(*Statement_AttachStmt); ok {
		return x.AttachStmt
	}
	return nil
}

func (x *Statement) GetBeginStmt() *BeginStmt {
	if x, ok := x.GetStatement().(*Statement_BeginStmt); ok {
		return x.BeginStmt
	}
	return nil
}

func (x *Statement) GetCommitStmt() *CommitStmt {
	if x, ok := x.GetStatement().(*Statement_CommitStmt); ok {
		return x.CommitStmt
	}
	return nil
}

func (x *Statement) GetCreateIndexStmt() *CreateIndexStmt {
	if x, ok := x.GetStatement().(*Statement_CreateIndexStmt); ok {
		return x.CreateIndexStmt
	}
	return nil
}

func (x *Statement) GetCreateTableStmt() *CreateTableStmt {
	if x, ok := x.GetStatement().(*Statement_CreateTableStmt); ok {
		return x.CreateTableStmt
	}
	return nil
}

func (x *Statement) GetCreateTriggerStmt() *CreateTriggerStmt {
	if x, ok := x.GetStatement().(*Statement_CreateTriggerStmt); ok {
		return x.CreateTriggerStmt
	}
	return nil
}

func (x *Statement) GetCreateViewStmt() *CreateViewStmt {
	if x, ok := x.GetStatement().(*Statement_CreateViewStmt); ok {
		return x.CreateViewStmt
	}
	return nil
}

func (x *Statement) GetCreateVirtualTableStmt() *CreateVirtualTableStmt {
	if x, ok := x.GetStatement().(*Statement_CreateVirtualTableStmt); ok {
		return x.CreateVirtualTableStmt
	}
	return nil
}

func (x *Statement) GetDeleteStmt() *DeleteStmt {
	if x, ok := x.GetStatement().(*Statement_DeleteStmt); ok {
		return x.DeleteStmt
	}
	return nil
}

func (x *Statement) GetDetachStmt() *DetachStmt {
	if x, ok := x.GetStatement().(*Statement_DetachStmt); ok {
		return x.DetachStmt
	}
	return nil
}

func (x *Statement) GetDropStmt() *DropStmt {
	if x, ok := x.GetStatement().(*Statement_DropStmt); ok {
		return x.DropStmt
	}
	return nil
}

func (x *Statement) GetEndStmt() *EndStmt {
	if x, ok := x.GetStatement().(*Statement_EndStmt); ok {
		return x.EndStmt
	}
	return nil
}

func (x *Statement) GetInsertStmt() *InsertStmt {
	if x, ok := x.GetStatement().(*Statement_InsertStmt); ok {
		return x.InsertStmt
	}
	return nil
}

func (x *Statement) GetPragmaStmt() *PragmaStmt {
	if x, ok := x.GetStatement().(*Statement_PragmaStmt); ok {
		return x.PragmaStmt
	}
	return nil
}

func (x *Statement) GetReindexStmt() *ReindexStmt {
	if x, ok := x.GetStatement().(*Statement_ReindexStmt); ok {
		return x.ReindexStmt
	}
	return nil
}

func (x *Statement) GetReleaseStmt() *ReleaseStmt {
	if x, ok := x.GetStatement().(*Statement_ReleaseStmt); ok {
		return x.ReleaseStmt
	}
	return nil
}

func (x *Statement) GetRollbackStmt() *RollbackStmt {
	if x, ok := x.GetStatement().(*Statement_RollbackStmt); ok {
		return x.RollbackStmt
	}
	return nil
}

func (x *Statement) GetSelectStmt() *SelectStmt {
	if x, ok := x.GetStatement().(*Statement_SelectStmt); ok {
		return x.SelectStmt
	}
	return nil
}

func (x *Statement) GetUpdateStmt() *UpdateStmt {
	if x, ok := x.GetStatement().(*Statement_UpdateStmt); ok {
		return x.UpdateStmt
	}
	return nil
}

func (x *Statement) GetVacuumStmt() *VacuumStmt {
	if x, ok := x.GetStatement().(*Statement_VacuumStmt); ok {
		return x.VacuumStmt
	}
	return nil
}

type isStatement_Statement interface {
	isStatement_Statement()
}

type Statement_AlterTableStmt struct {
	AlterTableStmt *AlterTableStmt `protobuf:"bytes,1,opt,name=alter_table_stmt,json=alterTableStmt,proto3,oneof" json:"alterTableStmt,omitempty"`
}

type Statement_AnalyzeSmt struct {
	AnalyzeSmt *AnalyzeSmt `protobuf:"bytes,2,opt,name=analyze_smt,json=analyzeSmt,proto3,oneof" json:"analyzeSmt,omitempty"`
}

type Statement_AttachStmt struct {
	AttachStmt *AttachStmt `protobuf:"bytes,3,opt,name=attach_stmt,json=attachStmt,proto3,oneof" json:"attachStmt,omitempty"`
}

type Statement_BeginStmt struct {
	BeginStmt *BeginStmt `protobuf:"bytes,5,opt,name=begin_stmt,json=beginStmt,proto3,oneof" json:"beginStmt,omitempty"`
}

type Statement_CommitStmt struct {
	CommitStmt *CommitStmt `protobuf:"bytes,6,opt,name=commit_stmt,json=commitStmt,proto3,oneof" json:"commitStmt,omitempty"`
}

type Statement_CreateIndexStmt struct {
	CreateIndexStmt *CreateIndexStmt `protobuf:"bytes,10,opt,name=create_index_stmt,json=createIndexStmt,proto3,oneof" json:"createIndexStmt,omitempty"`
}

type Statement_CreateTableStmt struct {
	CreateTableStmt *CreateTableStmt `protobuf:"bytes,11,opt,name=create_table_stmt,json=createTableStmt,proto3,oneof" json:"createTableStmt,omitempty"`
}

type Statement_CreateTriggerStmt struct {
	CreateTriggerStmt *CreateTriggerStmt `protobuf:"bytes,12,opt,name=create_trigger_stmt,json=createTriggerStmt,proto3,oneof" json:"createTriggerStmt,omitempty"`
}

type Statement_CreateViewStmt struct {
	CreateViewStmt *CreateViewStmt `protobuf:"bytes,13,opt,name=create_view_stmt,json=createViewStmt,proto3,oneof" json:"createViewStmt,omitempty"`
}

type Statement_CreateVirtualTableStmt struct {
	CreateVirtualTableStmt *CreateVirtualTableStmt `protobuf:"bytes,14,opt,name=create_virtual_table_stmt,json=createVirtualTableStmt,proto3,oneof" json:"createVirtualTableStmt,omitempty"`
}

type Statement_DeleteStmt struct {
	DeleteStmt *DeleteStmt `protobuf:"bytes,17,opt,name=delete_stmt,json=deleteStmt,proto3,oneof" json:"deleteStmt,omitempty"`
}

type Statement_DetachStmt struct {
	DetachStmt *DetachStmt `protobuf:"bytes,18,opt,name=detach_stmt,json=detachStmt,proto3,oneof" json:"detachStmt,omitempty"`
}

type Statement_DropStmt struct {
	DropStmt *DropStmt `protobuf:"bytes,19,opt,name=drop_stmt,json=dropStmt,proto3,oneof" json:"dropStmt,omitempty"`
}

type Statement_EndStmt struct {
	EndStmt *EndStmt `protobuf:"bytes,30,opt,name=end_stmt,json=endStmt,proto3,oneof" json:"endStmt,omitempty"`
}

type Statement_InsertStmt struct {
	InsertStmt *InsertStmt `protobuf:"bytes,20,opt,name=insert_stmt,json=insertStmt,proto3,oneof" json:"insertStmt,omitempty"`
}

type Statement_PragmaStmt struct {
	PragmaStmt *PragmaStmt `protobuf:"bytes,21,opt,name=pragma_stmt,json=pragmaStmt,proto3,oneof" json:"pragmaStmt,omitempty"`
}

type Statement_ReindexStmt struct {
	ReindexStmt *ReindexStmt `protobuf:"bytes,22,opt,name=reindex_stmt,json=reindexStmt,proto3,oneof" json:"reindexStmt,omitempty"`
}

type Statement_ReleaseStmt struct {
	ReleaseStmt *ReleaseStmt `protobuf:"bytes,23,opt,name=release_stmt,json=releaseStmt,proto3,oneof" json:"releaseStmt,omitempty"`
}

type Statement_RollbackStmt struct {
	RollbackStmt *RollbackStmt `protobuf:"bytes,24,opt,name=rollback_stmt,json=rollbackStmt,proto3,oneof" json:"rollbackStmt,omitempty"`
}

type Statement_SelectStmt struct {
	SelectStmt *SelectStmt `protobuf:"bytes,25,opt,name=select_stmt,json=selectStmt,proto3,oneof" json:"selectStmt,omitempty"`
}

type Statement_UpdateStmt struct {
	UpdateStmt *UpdateStmt `protobuf:"bytes,26,opt,name=update_stmt,json=updateStmt,proto3,oneof" json:"updateStmt,omitempty"`
}

type Statement_VacuumStmt struct {
	VacuumStmt *VacuumStmt `protobuf:"bytes,27,opt,name=vacuum_stmt,json=vacuumStmt,proto3,oneof" json:"vacuumStmt,omitempty"`
}

func (*Statement_AlterTableStmt) isStatement_Statement() {}

func (*Statement_AnalyzeSmt) isStatement_Statement() {}

func (*Statement_AttachStmt) isStatement_Statement() {}

func (*Statement_BeginStmt) isStatement_Statement() {}

func (*Statement_CommitStmt) isStatement_Statement() {}

func (*Statement_CreateIndexStmt) isStatement_Statement() {}

func (*Statement_CreateTableStmt) isStatement_Statement() {}

func (*Statement_CreateTriggerStmt) isStatement_Statement() {}

func (*Statement_CreateViewStmt) isStatement_Statement() {}

func (*Statement_CreateVirtualTableStmt) isStatement_Statement() {}

func (*Statement_DeleteStmt) isStatement_Statement() {}

func (*Statement_DetachStmt) isStatement_Statement() {}

func (*Statement_DropStmt) isStatement_Statement() {}

func (*Statement_EndStmt) isStatement_Statement() {}

func (*Statement_InsertStmt) isStatement_Statement() {}

func (*Statement_PragmaStmt) isStatement_Statement() {}

func (*Statement_ReindexStmt) isStatement_Statement() {}

func (*Statement_ReleaseStmt) isStatement_Statement() {}

func (*Statement_RollbackStmt) isStatement_Statement() {}

func (*Statement_SelectStmt) isStatement_Statement() {}

func (*Statement_UpdateStmt) isStatement_Statement() {}

func (*Statement_VacuumStmt) isStatement_Statement() {}

var File_mojo_db_sql_statement_proto protoreflect.FileDescriptor

var file_mojo_db_sql_statement_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x1a, 0x22, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x23, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71,
	0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x63, 0x68, 0x5f,
	0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x6d,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62,
	0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c,
	0x2f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f,
	0x70, 0x72, 0x61, 0x67, 0x6d, 0x61, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x72,
	0x65, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x72,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f,
	0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f,
	0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74,
	0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64,
	0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x76, 0x61, 0x63, 0x75, 0x75, 0x6d, 0x5f, 0x73, 0x74, 0x6d,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x0b, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x61, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x3a,
	0x0a, 0x0b, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x5f, 0x73, 0x6d, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71,
	0x6c, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x53, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x53, 0x6d, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f,
	0x73, 0x74, 0x6d, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x74,
	0x6d, 0x74, 0x48, 0x00, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x6d, 0x74, 0x12,
	0x3a, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73,
	0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x4a, 0x0a, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x6d, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62,
	0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x4a, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6d, 0x74,
	0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x74, 0x6d, 0x74, 0x12, 0x50, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x6d, 0x74,
	0x48, 0x00, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x60,
	0x0a, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6d, 0x74,
	0x12, 0x3a, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e,
	0x73, 0x71, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x3a, 0x0a, 0x0b,
	0x64, 0x65, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x74,
	0x6d, 0x74, 0x48, 0x00, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x31,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x45,
	0x6e, 0x64, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x6d,
	0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x6d, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62,
	0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x48,
	0x00, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x3a, 0x0a,
	0x0b, 0x70, 0x72, 0x61, 0x67, 0x6d, 0x61, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c,
	0x2e, 0x50, 0x72, 0x61, 0x67, 0x6d, 0x61, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70,
	0x72, 0x61, 0x67, 0x6d, 0x61, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x52, 0x65,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x52, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x6d, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6d,
	0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x76, 0x61, 0x63, 0x75, 0x75, 0x6d, 0x5f, 0x73, 0x74, 0x6d, 0x74,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62,
	0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x56, 0x61, 0x63, 0x75, 0x75, 0x6d, 0x53, 0x74, 0x6d, 0x74, 0x48,
	0x00, 0x52, 0x0a, 0x76, 0x61, 0x63, 0x75, 0x75, 0x6d, 0x53, 0x74, 0x6d, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x5c, 0x0a, 0x18, 0x6f, 0x72,
	0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x42, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2d, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x64,
	0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62,
	0x2f, 0x73, 0x71, 0x6c, 0x3b, 0x73, 0x71, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mojo_db_sql_statement_proto_rawDescOnce sync.Once
	file_mojo_db_sql_statement_proto_rawDescData = file_mojo_db_sql_statement_proto_rawDesc
)

func file_mojo_db_sql_statement_proto_rawDescGZIP() []byte {
	file_mojo_db_sql_statement_proto_rawDescOnce.Do(func() {
		file_mojo_db_sql_statement_proto_rawDescData = protoimpl.X.CompressGZIP(file_mojo_db_sql_statement_proto_rawDescData)
	})
	return file_mojo_db_sql_statement_proto_rawDescData
}

var file_mojo_db_sql_statement_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_mojo_db_sql_statement_proto_goTypes = []interface{}{
	(*Statement)(nil),              // 0: mojo.db.sql.Statement
	(*AlterTableStmt)(nil),         // 1: mojo.db.sql.AlterTableStmt
	(*AnalyzeSmt)(nil),             // 2: mojo.db.sql.AnalyzeSmt
	(*AttachStmt)(nil),             // 3: mojo.db.sql.AttachStmt
	(*BeginStmt)(nil),              // 4: mojo.db.sql.BeginStmt
	(*CommitStmt)(nil),             // 5: mojo.db.sql.CommitStmt
	(*CreateIndexStmt)(nil),        // 6: mojo.db.sql.CreateIndexStmt
	(*CreateTableStmt)(nil),        // 7: mojo.db.sql.CreateTableStmt
	(*CreateTriggerStmt)(nil),      // 8: mojo.db.sql.CreateTriggerStmt
	(*CreateViewStmt)(nil),         // 9: mojo.db.sql.CreateViewStmt
	(*CreateVirtualTableStmt)(nil), // 10: mojo.db.sql.CreateVirtualTableStmt
	(*DeleteStmt)(nil),             // 11: mojo.db.sql.DeleteStmt
	(*DetachStmt)(nil),             // 12: mojo.db.sql.DetachStmt
	(*DropStmt)(nil),               // 13: mojo.db.sql.DropStmt
	(*EndStmt)(nil),                // 14: mojo.db.sql.EndStmt
	(*InsertStmt)(nil),             // 15: mojo.db.sql.InsertStmt
	(*PragmaStmt)(nil),             // 16: mojo.db.sql.PragmaStmt
	(*ReindexStmt)(nil),            // 17: mojo.db.sql.ReindexStmt
	(*ReleaseStmt)(nil),            // 18: mojo.db.sql.ReleaseStmt
	(*RollbackStmt)(nil),           // 19: mojo.db.sql.RollbackStmt
	(*SelectStmt)(nil),             // 20: mojo.db.sql.SelectStmt
	(*UpdateStmt)(nil),             // 21: mojo.db.sql.UpdateStmt
	(*VacuumStmt)(nil),             // 22: mojo.db.sql.VacuumStmt
}
var file_mojo_db_sql_statement_proto_depIdxs = []int32{
	1,  // 0: mojo.db.sql.Statement.alter_table_stmt:type_name -> mojo.db.sql.AlterTableStmt
	2,  // 1: mojo.db.sql.Statement.analyze_smt:type_name -> mojo.db.sql.AnalyzeSmt
	3,  // 2: mojo.db.sql.Statement.attach_stmt:type_name -> mojo.db.sql.AttachStmt
	4,  // 3: mojo.db.sql.Statement.begin_stmt:type_name -> mojo.db.sql.BeginStmt
	5,  // 4: mojo.db.sql.Statement.commit_stmt:type_name -> mojo.db.sql.CommitStmt
	6,  // 5: mojo.db.sql.Statement.create_index_stmt:type_name -> mojo.db.sql.CreateIndexStmt
	7,  // 6: mojo.db.sql.Statement.create_table_stmt:type_name -> mojo.db.sql.CreateTableStmt
	8,  // 7: mojo.db.sql.Statement.create_trigger_stmt:type_name -> mojo.db.sql.CreateTriggerStmt
	9,  // 8: mojo.db.sql.Statement.create_view_stmt:type_name -> mojo.db.sql.CreateViewStmt
	10, // 9: mojo.db.sql.Statement.create_virtual_table_stmt:type_name -> mojo.db.sql.CreateVirtualTableStmt
	11, // 10: mojo.db.sql.Statement.delete_stmt:type_name -> mojo.db.sql.DeleteStmt
	12, // 11: mojo.db.sql.Statement.detach_stmt:type_name -> mojo.db.sql.DetachStmt
	13, // 12: mojo.db.sql.Statement.drop_stmt:type_name -> mojo.db.sql.DropStmt
	14, // 13: mojo.db.sql.Statement.end_stmt:type_name -> mojo.db.sql.EndStmt
	15, // 14: mojo.db.sql.Statement.insert_stmt:type_name -> mojo.db.sql.InsertStmt
	16, // 15: mojo.db.sql.Statement.pragma_stmt:type_name -> mojo.db.sql.PragmaStmt
	17, // 16: mojo.db.sql.Statement.reindex_stmt:type_name -> mojo.db.sql.ReindexStmt
	18, // 17: mojo.db.sql.Statement.release_stmt:type_name -> mojo.db.sql.ReleaseStmt
	19, // 18: mojo.db.sql.Statement.rollback_stmt:type_name -> mojo.db.sql.RollbackStmt
	20, // 19: mojo.db.sql.Statement.select_stmt:type_name -> mojo.db.sql.SelectStmt
	21, // 20: mojo.db.sql.Statement.update_stmt:type_name -> mojo.db.sql.UpdateStmt
	22, // 21: mojo.db.sql.Statement.vacuum_stmt:type_name -> mojo.db.sql.VacuumStmt
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_mojo_db_sql_statement_proto_init() }
func file_mojo_db_sql_statement_proto_init() {
	if File_mojo_db_sql_statement_proto != nil {
		return
	}
	file_mojo_db_sql_alter_table_stmt_proto_init()
	file_mojo_db_sql_analyze_stmt_proto_init()
	file_mojo_db_sql_attach_stmt_proto_init()
	file_mojo_db_sql_begin_stmt_proto_init()
	file_mojo_db_sql_commit_stmt_proto_init()
	file_mojo_db_sql_create_index_stmt_proto_init()
	file_mojo_db_sql_create_table_stmt_proto_init()
	file_mojo_db_sql_create_trigger_stmt_proto_init()
	file_mojo_db_sql_create_view_stmt_proto_init()
	file_mojo_db_sql_create_virtual_table_stmt_proto_init()
	file_mojo_db_sql_delete_stmt_proto_init()
	file_mojo_db_sql_detach_stmt_proto_init()
	file_mojo_db_sql_drop_stmt_proto_init()
	file_mojo_db_sql_end_stmt_proto_init()
	file_mojo_db_sql_insert_stmt_proto_init()
	file_mojo_db_sql_pragma_stmt_proto_init()
	file_mojo_db_sql_reindex_stmt_proto_init()
	file_mojo_db_sql_release_stmt_proto_init()
	file_mojo_db_sql_rollback_stmt_proto_init()
	file_mojo_db_sql_sql_proto_init()
	file_mojo_db_sql_update_stmt_proto_init()
	file_mojo_db_sql_vacuum_stmt_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mojo_db_sql_statement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mojo_db_sql_statement_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Statement_AlterTableStmt)(nil),
		(*Statement_AnalyzeSmt)(nil),
		(*Statement_AttachStmt)(nil),
		(*Statement_BeginStmt)(nil),
		(*Statement_CommitStmt)(nil),
		(*Statement_CreateIndexStmt)(nil),
		(*Statement_CreateTableStmt)(nil),
		(*Statement_CreateTriggerStmt)(nil),
		(*Statement_CreateViewStmt)(nil),
		(*Statement_CreateVirtualTableStmt)(nil),
		(*Statement_DeleteStmt)(nil),
		(*Statement_DetachStmt)(nil),
		(*Statement_DropStmt)(nil),
		(*Statement_EndStmt)(nil),
		(*Statement_InsertStmt)(nil),
		(*Statement_PragmaStmt)(nil),
		(*Statement_ReindexStmt)(nil),
		(*Statement_ReleaseStmt)(nil),
		(*Statement_RollbackStmt)(nil),
		(*Statement_SelectStmt)(nil),
		(*Statement_UpdateStmt)(nil),
		(*Statement_VacuumStmt)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mojo_db_sql_statement_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mojo_db_sql_statement_proto_goTypes,
		DependencyIndexes: file_mojo_db_sql_statement_proto_depIdxs,
		MessageInfos:      file_mojo_db_sql_statement_proto_msgTypes,
	}.Build()
	File_mojo_db_sql_statement_proto = out.File
	file_mojo_db_sql_statement_proto_rawDesc = nil
	file_mojo_db_sql_statement_proto_goTypes = nil
	file_mojo_db_sql_statement_proto_depIdxs = nil
}
