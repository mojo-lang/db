// Code generated by mojo. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: mojo/db/sql/statement.proto

package sql

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Statement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Statement:
	//	*Statement_AlterTableStmtVal
	//	*Statement_AnalyzeSmtVal
	//	*Statement_AttachStmtVal
	//	*Statement_BeginStmtVal
	//	*Statement_CommitStmtVal
	//	*Statement_CreateIndexStmtVal
	//	*Statement_CreateTableStmtVal
	//	*Statement_CreateTriggerStmtVal
	//	*Statement_CreateViewStmtVal
	//	*Statement_CreateVirtualTableStmtVal
	//	*Statement_DeleteStmtVal
	//	*Statement_DetachStmtVal
	//	*Statement_DropStmtVal
	//	*Statement_EndStmtVal
	//	*Statement_InsertStmtVal
	//	*Statement_PragmaStmtVal
	//	*Statement_ReindexStmtVal
	//	*Statement_ReleaseStmtVal
	//	*Statement_RollbackStmtVal
	//	*Statement_SelectStmtVal
	//	*Statement_UpdateStmtVal
	//	*Statement_VacuumStmtVal
	Statement isStatement_Statement `protobuf_oneof:"statement" json:"statement,omitempty"`
}

func (x *Statement) Reset() {
	*x = Statement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_db_sql_statement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_db_sql_statement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_mojo_db_sql_statement_proto_rawDescGZIP(), []int{0}
}

func (m *Statement) GetStatement() isStatement_Statement {
	if m != nil {
		return m.Statement
	}
	return nil
}

func (x *Statement) GetAlterTableStmtVal() *AlterTableStmt {
	if x, ok := x.GetStatement().(*Statement_AlterTableStmtVal); ok {
		return x.AlterTableStmtVal
	}
	return nil
}

func (x *Statement) GetAnalyzeSmtVal() *AnalyzeSmt {
	if x, ok := x.GetStatement().(*Statement_AnalyzeSmtVal); ok {
		return x.AnalyzeSmtVal
	}
	return nil
}

func (x *Statement) GetAttachStmtVal() *AttachStmt {
	if x, ok := x.GetStatement().(*Statement_AttachStmtVal); ok {
		return x.AttachStmtVal
	}
	return nil
}

func (x *Statement) GetBeginStmtVal() *BeginStmt {
	if x, ok := x.GetStatement().(*Statement_BeginStmtVal); ok {
		return x.BeginStmtVal
	}
	return nil
}

func (x *Statement) GetCommitStmtVal() *CommitStmt {
	if x, ok := x.GetStatement().(*Statement_CommitStmtVal); ok {
		return x.CommitStmtVal
	}
	return nil
}

func (x *Statement) GetCreateIndexStmtVal() *CreateIndexStmt {
	if x, ok := x.GetStatement().(*Statement_CreateIndexStmtVal); ok {
		return x.CreateIndexStmtVal
	}
	return nil
}

func (x *Statement) GetCreateTableStmtVal() *CreateTableStmt {
	if x, ok := x.GetStatement().(*Statement_CreateTableStmtVal); ok {
		return x.CreateTableStmtVal
	}
	return nil
}

func (x *Statement) GetCreateTriggerStmtVal() *CreateTriggerStmt {
	if x, ok := x.GetStatement().(*Statement_CreateTriggerStmtVal); ok {
		return x.CreateTriggerStmtVal
	}
	return nil
}

func (x *Statement) GetCreateViewStmtVal() *CreateViewStmt {
	if x, ok := x.GetStatement().(*Statement_CreateViewStmtVal); ok {
		return x.CreateViewStmtVal
	}
	return nil
}

func (x *Statement) GetCreateVirtualTableStmtVal() *CreateVirtualTableStmt {
	if x, ok := x.GetStatement().(*Statement_CreateVirtualTableStmtVal); ok {
		return x.CreateVirtualTableStmtVal
	}
	return nil
}

func (x *Statement) GetDeleteStmtVal() *DeleteStmt {
	if x, ok := x.GetStatement().(*Statement_DeleteStmtVal); ok {
		return x.DeleteStmtVal
	}
	return nil
}

func (x *Statement) GetDetachStmtVal() *DetachStmt {
	if x, ok := x.GetStatement().(*Statement_DetachStmtVal); ok {
		return x.DetachStmtVal
	}
	return nil
}

func (x *Statement) GetDropStmtVal() *DropStmt {
	if x, ok := x.GetStatement().(*Statement_DropStmtVal); ok {
		return x.DropStmtVal
	}
	return nil
}

func (x *Statement) GetEndStmtVal() *EndStmt {
	if x, ok := x.GetStatement().(*Statement_EndStmtVal); ok {
		return x.EndStmtVal
	}
	return nil
}

func (x *Statement) GetInsertStmtVal() *InsertStmt {
	if x, ok := x.GetStatement().(*Statement_InsertStmtVal); ok {
		return x.InsertStmtVal
	}
	return nil
}

func (x *Statement) GetPragmaStmtVal() *PragmaStmt {
	if x, ok := x.GetStatement().(*Statement_PragmaStmtVal); ok {
		return x.PragmaStmtVal
	}
	return nil
}

func (x *Statement) GetReindexStmtVal() *ReindexStmt {
	if x, ok := x.GetStatement().(*Statement_ReindexStmtVal); ok {
		return x.ReindexStmtVal
	}
	return nil
}

func (x *Statement) GetReleaseStmtVal() *ReleaseStmt {
	if x, ok := x.GetStatement().(*Statement_ReleaseStmtVal); ok {
		return x.ReleaseStmtVal
	}
	return nil
}

func (x *Statement) GetRollbackStmtVal() *RollbackStmt {
	if x, ok := x.GetStatement().(*Statement_RollbackStmtVal); ok {
		return x.RollbackStmtVal
	}
	return nil
}

func (x *Statement) GetSelectStmtVal() *SelectStmt {
	if x, ok := x.GetStatement().(*Statement_SelectStmtVal); ok {
		return x.SelectStmtVal
	}
	return nil
}

func (x *Statement) GetUpdateStmtVal() *UpdateStmt {
	if x, ok := x.GetStatement().(*Statement_UpdateStmtVal); ok {
		return x.UpdateStmtVal
	}
	return nil
}

func (x *Statement) GetVacuumStmtVal() *VacuumStmt {
	if x, ok := x.GetStatement().(*Statement_VacuumStmtVal); ok {
		return x.VacuumStmtVal
	}
	return nil
}

type isStatement_Statement interface {
	isStatement_Statement()
}

type Statement_AlterTableStmtVal struct {
	AlterTableStmtVal *AlterTableStmt `protobuf:"bytes,1,opt,name=alter_table_stmt_val,json=alterTableStmtVal,proto3,oneof" json:"alterTableStmtVal,omitempty"`
}

type Statement_AnalyzeSmtVal struct {
	AnalyzeSmtVal *AnalyzeSmt `protobuf:"bytes,2,opt,name=analyze_smt_val,json=analyzeSmtVal,proto3,oneof" json:"analyzeSmtVal,omitempty"`
}

type Statement_AttachStmtVal struct {
	AttachStmtVal *AttachStmt `protobuf:"bytes,3,opt,name=attach_stmt_val,json=attachStmtVal,proto3,oneof" json:"attachStmtVal,omitempty"`
}

type Statement_BeginStmtVal struct {
	BeginStmtVal *BeginStmt `protobuf:"bytes,5,opt,name=begin_stmt_val,json=beginStmtVal,proto3,oneof" json:"beginStmtVal,omitempty"`
}

type Statement_CommitStmtVal struct {
	CommitStmtVal *CommitStmt `protobuf:"bytes,6,opt,name=commit_stmt_val,json=commitStmtVal,proto3,oneof" json:"commitStmtVal,omitempty"`
}

type Statement_CreateIndexStmtVal struct {
	CreateIndexStmtVal *CreateIndexStmt `protobuf:"bytes,10,opt,name=create_index_stmt_val,json=createIndexStmtVal,proto3,oneof" json:"createIndexStmtVal,omitempty"`
}

type Statement_CreateTableStmtVal struct {
	CreateTableStmtVal *CreateTableStmt `protobuf:"bytes,11,opt,name=create_table_stmt_val,json=createTableStmtVal,proto3,oneof" json:"createTableStmtVal,omitempty"`
}

type Statement_CreateTriggerStmtVal struct {
	CreateTriggerStmtVal *CreateTriggerStmt `protobuf:"bytes,12,opt,name=create_trigger_stmt_val,json=createTriggerStmtVal,proto3,oneof" json:"createTriggerStmtVal,omitempty"`
}

type Statement_CreateViewStmtVal struct {
	CreateViewStmtVal *CreateViewStmt `protobuf:"bytes,13,opt,name=create_view_stmt_val,json=createViewStmtVal,proto3,oneof" json:"createViewStmtVal,omitempty"`
}

type Statement_CreateVirtualTableStmtVal struct {
	CreateVirtualTableStmtVal *CreateVirtualTableStmt `protobuf:"bytes,14,opt,name=create_virtual_table_stmt_val,json=createVirtualTableStmtVal,proto3,oneof" json:"createVirtualTableStmtVal,omitempty"`
}

type Statement_DeleteStmtVal struct {
	DeleteStmtVal *DeleteStmt `protobuf:"bytes,17,opt,name=delete_stmt_val,json=deleteStmtVal,proto3,oneof" json:"deleteStmtVal,omitempty"`
}

type Statement_DetachStmtVal struct {
	DetachStmtVal *DetachStmt `protobuf:"bytes,18,opt,name=detach_stmt_val,json=detachStmtVal,proto3,oneof" json:"detachStmtVal,omitempty"`
}

type Statement_DropStmtVal struct {
	DropStmtVal *DropStmt `protobuf:"bytes,19,opt,name=drop_stmt_val,json=dropStmtVal,proto3,oneof" json:"dropStmtVal,omitempty"`
}

type Statement_EndStmtVal struct {
	EndStmtVal *EndStmt `protobuf:"bytes,30,opt,name=end_stmt_val,json=endStmtVal,proto3,oneof" json:"endStmtVal,omitempty"`
}

type Statement_InsertStmtVal struct {
	InsertStmtVal *InsertStmt `protobuf:"bytes,20,opt,name=insert_stmt_val,json=insertStmtVal,proto3,oneof" json:"insertStmtVal,omitempty"`
}

type Statement_PragmaStmtVal struct {
	PragmaStmtVal *PragmaStmt `protobuf:"bytes,21,opt,name=pragma_stmt_val,json=pragmaStmtVal,proto3,oneof" json:"pragmaStmtVal,omitempty"`
}

type Statement_ReindexStmtVal struct {
	ReindexStmtVal *ReindexStmt `protobuf:"bytes,22,opt,name=reindex_stmt_val,json=reindexStmtVal,proto3,oneof" json:"reindexStmtVal,omitempty"`
}

type Statement_ReleaseStmtVal struct {
	ReleaseStmtVal *ReleaseStmt `protobuf:"bytes,23,opt,name=release_stmt_val,json=releaseStmtVal,proto3,oneof" json:"releaseStmtVal,omitempty"`
}

type Statement_RollbackStmtVal struct {
	RollbackStmtVal *RollbackStmt `protobuf:"bytes,24,opt,name=rollback_stmt_val,json=rollbackStmtVal,proto3,oneof" json:"rollbackStmtVal,omitempty"`
}

type Statement_SelectStmtVal struct {
	SelectStmtVal *SelectStmt `protobuf:"bytes,25,opt,name=select_stmt_val,json=selectStmtVal,proto3,oneof" json:"selectStmtVal,omitempty"`
}

type Statement_UpdateStmtVal struct {
	UpdateStmtVal *UpdateStmt `protobuf:"bytes,26,opt,name=update_stmt_val,json=updateStmtVal,proto3,oneof" json:"updateStmtVal,omitempty"`
}

type Statement_VacuumStmtVal struct {
	VacuumStmtVal *VacuumStmt `protobuf:"bytes,27,opt,name=vacuum_stmt_val,json=vacuumStmtVal,proto3,oneof" json:"vacuumStmtVal,omitempty"`
}

func (*Statement_AlterTableStmtVal) isStatement_Statement() {}

func (*Statement_AnalyzeSmtVal) isStatement_Statement() {}

func (*Statement_AttachStmtVal) isStatement_Statement() {}

func (*Statement_BeginStmtVal) isStatement_Statement() {}

func (*Statement_CommitStmtVal) isStatement_Statement() {}

func (*Statement_CreateIndexStmtVal) isStatement_Statement() {}

func (*Statement_CreateTableStmtVal) isStatement_Statement() {}

func (*Statement_CreateTriggerStmtVal) isStatement_Statement() {}

func (*Statement_CreateViewStmtVal) isStatement_Statement() {}

func (*Statement_CreateVirtualTableStmtVal) isStatement_Statement() {}

func (*Statement_DeleteStmtVal) isStatement_Statement() {}

func (*Statement_DetachStmtVal) isStatement_Statement() {}

func (*Statement_DropStmtVal) isStatement_Statement() {}

func (*Statement_EndStmtVal) isStatement_Statement() {}

func (*Statement_InsertStmtVal) isStatement_Statement() {}

func (*Statement_PragmaStmtVal) isStatement_Statement() {}

func (*Statement_ReindexStmtVal) isStatement_Statement() {}

func (*Statement_ReleaseStmtVal) isStatement_Statement() {}

func (*Statement_RollbackStmtVal) isStatement_Statement() {}

func (*Statement_SelectStmtVal) isStatement_Statement() {}

func (*Statement_UpdateStmtVal) isStatement_Statement() {}

func (*Statement_VacuumStmtVal) isStatement_Statement() {}

var File_mojo_db_sql_statement_proto protoreflect.FileDescriptor

var file_mojo_db_sql_statement_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x1a, 0x22, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x23, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71,
	0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x63, 0x68, 0x5f,
	0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x6d,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62,
	0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c,
	0x2f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f,
	0x70, 0x72, 0x61, 0x67, 0x6d, 0x61, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x72,
	0x65, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x72,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f,
	0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f,
	0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74,
	0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64,
	0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x76, 0x61, 0x63, 0x75, 0x75, 0x6d, 0x5f, 0x73, 0x74, 0x6d,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x0c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71,
	0x6c, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6d, 0x74,
	0x48, 0x00, 0x52, 0x11, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65,
	0x5f, 0x73, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x53, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x53, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x0e, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71,
	0x6c, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73,
	0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52,
	0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x51,
	0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73,
	0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61,
	0x6c, 0x12, 0x51, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00,
	0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6d,
	0x74, 0x56, 0x61, 0x6c, 0x12, 0x57, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e,
	0x73, 0x71, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x4e, 0x0a,
	0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x6d,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x67, 0x0a,
	0x1d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73,
	0x71, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x19, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x64, 0x65, 0x74,
	0x61, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c,
	0x2e, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x64,
	0x65, 0x74, 0x61, 0x63, 0x68, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0d,
	0x64, 0x72, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71,
	0x6c, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x72,
	0x6f, 0x70, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0c, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x45, 0x6e,
	0x64, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x6d, 0x74,
	0x56, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74,
	0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53,
	0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x70, 0x72, 0x61, 0x67, 0x6d, 0x61,
	0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x50, 0x72,
	0x61, 0x67, 0x6d, 0x61, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x61, 0x67,
	0x6d, 0x61, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x10, 0x72, 0x65, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71,
	0x6c, 0x2e, 0x52, 0x65, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52,
	0x0e, 0x72, 0x65, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12,
	0x44, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53,
	0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x47, 0x0a, 0x11, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x52,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x72,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x41,
	0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6d, 0x74,
	0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x56, 0x61,
	0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6d,
	0x74, 0x56, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x76, 0x61, 0x63, 0x75, 0x75, 0x6d, 0x5f, 0x73,
	0x74, 0x6d, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x56, 0x61, 0x63, 0x75,
	0x75, 0x6d, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x61, 0x63, 0x75, 0x75, 0x6d,
	0x53, 0x74, 0x6d, 0x74, 0x56, 0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x5c, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c,
	0x42, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2d, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x64, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x3b, 0x73,
	0x71, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mojo_db_sql_statement_proto_rawDescOnce sync.Once
	file_mojo_db_sql_statement_proto_rawDescData = file_mojo_db_sql_statement_proto_rawDesc
)

func file_mojo_db_sql_statement_proto_rawDescGZIP() []byte {
	file_mojo_db_sql_statement_proto_rawDescOnce.Do(func() {
		file_mojo_db_sql_statement_proto_rawDescData = protoimpl.X.CompressGZIP(file_mojo_db_sql_statement_proto_rawDescData)
	})
	return file_mojo_db_sql_statement_proto_rawDescData
}

var file_mojo_db_sql_statement_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_mojo_db_sql_statement_proto_goTypes = []interface{}{
	(*Statement)(nil),              // 0: mojo.db.sql.Statement
	(*AlterTableStmt)(nil),         // 1: mojo.db.sql.AlterTableStmt
	(*AnalyzeSmt)(nil),             // 2: mojo.db.sql.AnalyzeSmt
	(*AttachStmt)(nil),             // 3: mojo.db.sql.AttachStmt
	(*BeginStmt)(nil),              // 4: mojo.db.sql.BeginStmt
	(*CommitStmt)(nil),             // 5: mojo.db.sql.CommitStmt
	(*CreateIndexStmt)(nil),        // 6: mojo.db.sql.CreateIndexStmt
	(*CreateTableStmt)(nil),        // 7: mojo.db.sql.CreateTableStmt
	(*CreateTriggerStmt)(nil),      // 8: mojo.db.sql.CreateTriggerStmt
	(*CreateViewStmt)(nil),         // 9: mojo.db.sql.CreateViewStmt
	(*CreateVirtualTableStmt)(nil), // 10: mojo.db.sql.CreateVirtualTableStmt
	(*DeleteStmt)(nil),             // 11: mojo.db.sql.DeleteStmt
	(*DetachStmt)(nil),             // 12: mojo.db.sql.DetachStmt
	(*DropStmt)(nil),               // 13: mojo.db.sql.DropStmt
	(*EndStmt)(nil),                // 14: mojo.db.sql.EndStmt
	(*InsertStmt)(nil),             // 15: mojo.db.sql.InsertStmt
	(*PragmaStmt)(nil),             // 16: mojo.db.sql.PragmaStmt
	(*ReindexStmt)(nil),            // 17: mojo.db.sql.ReindexStmt
	(*ReleaseStmt)(nil),            // 18: mojo.db.sql.ReleaseStmt
	(*RollbackStmt)(nil),           // 19: mojo.db.sql.RollbackStmt
	(*SelectStmt)(nil),             // 20: mojo.db.sql.SelectStmt
	(*UpdateStmt)(nil),             // 21: mojo.db.sql.UpdateStmt
	(*VacuumStmt)(nil),             // 22: mojo.db.sql.VacuumStmt
}
var file_mojo_db_sql_statement_proto_depIdxs = []int32{
	1,  // 0: mojo.db.sql.Statement.alter_table_stmt_val:type_name -> mojo.db.sql.AlterTableStmt
	2,  // 1: mojo.db.sql.Statement.analyze_smt_val:type_name -> mojo.db.sql.AnalyzeSmt
	3,  // 2: mojo.db.sql.Statement.attach_stmt_val:type_name -> mojo.db.sql.AttachStmt
	4,  // 3: mojo.db.sql.Statement.begin_stmt_val:type_name -> mojo.db.sql.BeginStmt
	5,  // 4: mojo.db.sql.Statement.commit_stmt_val:type_name -> mojo.db.sql.CommitStmt
	6,  // 5: mojo.db.sql.Statement.create_index_stmt_val:type_name -> mojo.db.sql.CreateIndexStmt
	7,  // 6: mojo.db.sql.Statement.create_table_stmt_val:type_name -> mojo.db.sql.CreateTableStmt
	8,  // 7: mojo.db.sql.Statement.create_trigger_stmt_val:type_name -> mojo.db.sql.CreateTriggerStmt
	9,  // 8: mojo.db.sql.Statement.create_view_stmt_val:type_name -> mojo.db.sql.CreateViewStmt
	10, // 9: mojo.db.sql.Statement.create_virtual_table_stmt_val:type_name -> mojo.db.sql.CreateVirtualTableStmt
	11, // 10: mojo.db.sql.Statement.delete_stmt_val:type_name -> mojo.db.sql.DeleteStmt
	12, // 11: mojo.db.sql.Statement.detach_stmt_val:type_name -> mojo.db.sql.DetachStmt
	13, // 12: mojo.db.sql.Statement.drop_stmt_val:type_name -> mojo.db.sql.DropStmt
	14, // 13: mojo.db.sql.Statement.end_stmt_val:type_name -> mojo.db.sql.EndStmt
	15, // 14: mojo.db.sql.Statement.insert_stmt_val:type_name -> mojo.db.sql.InsertStmt
	16, // 15: mojo.db.sql.Statement.pragma_stmt_val:type_name -> mojo.db.sql.PragmaStmt
	17, // 16: mojo.db.sql.Statement.reindex_stmt_val:type_name -> mojo.db.sql.ReindexStmt
	18, // 17: mojo.db.sql.Statement.release_stmt_val:type_name -> mojo.db.sql.ReleaseStmt
	19, // 18: mojo.db.sql.Statement.rollback_stmt_val:type_name -> mojo.db.sql.RollbackStmt
	20, // 19: mojo.db.sql.Statement.select_stmt_val:type_name -> mojo.db.sql.SelectStmt
	21, // 20: mojo.db.sql.Statement.update_stmt_val:type_name -> mojo.db.sql.UpdateStmt
	22, // 21: mojo.db.sql.Statement.vacuum_stmt_val:type_name -> mojo.db.sql.VacuumStmt
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_mojo_db_sql_statement_proto_init() }
func file_mojo_db_sql_statement_proto_init() {
	if File_mojo_db_sql_statement_proto != nil {
		return
	}
	file_mojo_db_sql_alter_table_stmt_proto_init()
	file_mojo_db_sql_analyze_stmt_proto_init()
	file_mojo_db_sql_attach_stmt_proto_init()
	file_mojo_db_sql_begin_stmt_proto_init()
	file_mojo_db_sql_commit_stmt_proto_init()
	file_mojo_db_sql_create_index_stmt_proto_init()
	file_mojo_db_sql_create_table_stmt_proto_init()
	file_mojo_db_sql_create_trigger_stmt_proto_init()
	file_mojo_db_sql_create_view_stmt_proto_init()
	file_mojo_db_sql_create_virtual_table_stmt_proto_init()
	file_mojo_db_sql_delete_stmt_proto_init()
	file_mojo_db_sql_detach_stmt_proto_init()
	file_mojo_db_sql_drop_stmt_proto_init()
	file_mojo_db_sql_end_stmt_proto_init()
	file_mojo_db_sql_insert_stmt_proto_init()
	file_mojo_db_sql_pragma_stmt_proto_init()
	file_mojo_db_sql_reindex_stmt_proto_init()
	file_mojo_db_sql_release_stmt_proto_init()
	file_mojo_db_sql_rollback_stmt_proto_init()
	file_mojo_db_sql_sql_proto_init()
	file_mojo_db_sql_update_stmt_proto_init()
	file_mojo_db_sql_vacuum_stmt_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mojo_db_sql_statement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mojo_db_sql_statement_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Statement_AlterTableStmtVal)(nil),
		(*Statement_AnalyzeSmtVal)(nil),
		(*Statement_AttachStmtVal)(nil),
		(*Statement_BeginStmtVal)(nil),
		(*Statement_CommitStmtVal)(nil),
		(*Statement_CreateIndexStmtVal)(nil),
		(*Statement_CreateTableStmtVal)(nil),
		(*Statement_CreateTriggerStmtVal)(nil),
		(*Statement_CreateViewStmtVal)(nil),
		(*Statement_CreateVirtualTableStmtVal)(nil),
		(*Statement_DeleteStmtVal)(nil),
		(*Statement_DetachStmtVal)(nil),
		(*Statement_DropStmtVal)(nil),
		(*Statement_EndStmtVal)(nil),
		(*Statement_InsertStmtVal)(nil),
		(*Statement_PragmaStmtVal)(nil),
		(*Statement_ReindexStmtVal)(nil),
		(*Statement_ReleaseStmtVal)(nil),
		(*Statement_RollbackStmtVal)(nil),
		(*Statement_SelectStmtVal)(nil),
		(*Statement_UpdateStmtVal)(nil),
		(*Statement_VacuumStmtVal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mojo_db_sql_statement_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mojo_db_sql_statement_proto_goTypes,
		DependencyIndexes: file_mojo_db_sql_statement_proto_depIdxs,
		MessageInfos:      file_mojo_db_sql_statement_proto_msgTypes,
	}.Build()
	File_mojo_db_sql_statement_proto = out.File
	file_mojo_db_sql_statement_proto_rawDesc = nil
	file_mojo_db_sql_statement_proto_goTypes = nil
	file_mojo_db_sql_statement_proto_depIdxs = nil
}
