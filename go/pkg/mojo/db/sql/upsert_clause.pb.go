// Code generated by mojo. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: mojo/db/sql/upsert_clause.proto

package sql

import (
	lang "github.com/mojo-lang/lang/go/pkg/mojo/lang"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpsertClause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartPosition *lang.Position          `protobuf:"bytes,1,opt,name=start_position,json=startPosition,proto3" json:"startPosition,omitempty"`
	EndPosition   *lang.Position          `protobuf:"bytes,2,opt,name=end_position,json=endPosition,proto3" json:"endPosition,omitempty"`
	Kind          int64                   `protobuf:"varint,4,opt,name=kind,proto3" json:"kind,omitempty"`
	Implicit      bool                    `protobuf:"varint,5,opt,name=implicit,proto3" json:"implicit,omitempty"`
	Conflict      *UpsertClause_Conflict  `protobuf:"bytes,10,opt,name=conflict,proto3" json:"conflict,omitempty"`
	UpdateSet     *UpsertClause_UpdateSet `protobuf:"bytes,11,opt,name=update_set,json=updateSet,proto3" json:"updateSet,omitempty"`
}

func (x *UpsertClause) Reset() {
	*x = UpsertClause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_db_sql_upsert_clause_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertClause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertClause) ProtoMessage() {}

func (x *UpsertClause) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_db_sql_upsert_clause_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertClause.ProtoReflect.Descriptor instead.
func (*UpsertClause) Descriptor() ([]byte, []int) {
	return file_mojo_db_sql_upsert_clause_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertClause) GetStartPosition() *lang.Position {
	if x != nil {
		return x.StartPosition
	}
	return nil
}

func (x *UpsertClause) GetEndPosition() *lang.Position {
	if x != nil {
		return x.EndPosition
	}
	return nil
}

func (x *UpsertClause) GetKind() int64 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *UpsertClause) GetImplicit() bool {
	if x != nil {
		return x.Implicit
	}
	return false
}

func (x *UpsertClause) GetConflict() *UpsertClause_Conflict {
	if x != nil {
		return x.Conflict
	}
	return nil
}

func (x *UpsertClause) GetUpdateSet() *UpsertClause_UpdateSet {
	if x != nil {
		return x.UpdateSet
	}
	return nil
}

type UpsertClause_Conflict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*IndexedColumn `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Where   *WhereClause     `protobuf:"bytes,2,opt,name=where,proto3" json:"where,omitempty"`
}

func (x *UpsertClause_Conflict) Reset() {
	*x = UpsertClause_Conflict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_db_sql_upsert_clause_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertClause_Conflict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertClause_Conflict) ProtoMessage() {}

func (x *UpsertClause_Conflict) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_db_sql_upsert_clause_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertClause_Conflict.ProtoReflect.Descriptor instead.
func (*UpsertClause_Conflict) Descriptor() ([]byte, []int) {
	return file_mojo_db_sql_upsert_clause_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UpsertClause_Conflict) GetColumns() []*IndexedColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *UpsertClause_Conflict) GetWhere() *WhereClause {
	if x != nil {
		return x.Where
	}
	return nil
}

type UpsertClause_UpdateSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignments []*ColumnAssignment `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
	Where       *WhereClause        `protobuf:"bytes,2,opt,name=where,proto3" json:"where,omitempty"`
}

func (x *UpsertClause_UpdateSet) Reset() {
	*x = UpsertClause_UpdateSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_db_sql_upsert_clause_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertClause_UpdateSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertClause_UpdateSet) ProtoMessage() {}

func (x *UpsertClause_UpdateSet) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_db_sql_upsert_clause_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertClause_UpdateSet.ProtoReflect.Descriptor instead.
func (*UpsertClause_UpdateSet) Descriptor() ([]byte, []int) {
	return file_mojo_db_sql_upsert_clause_proto_rawDescGZIP(), []int{0, 1}
}

func (x *UpsertClause_UpdateSet) GetAssignments() []*ColumnAssignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *UpsertClause_UpdateSet) GetWhere() *WhereClause {
	if x != nil {
		return x.Where
	}
	return nil
}

var File_mojo_db_sql_upsert_clause_proto protoreflect.FileDescriptor

var file_mojo_db_sql_upsert_clause_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x75, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x1a, 0x18,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x6c, 0x61, 0x75,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64,
	0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x75,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64,
	0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x04, 0x0a, 0x0c, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65,
	0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12, 0x42, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x1a, 0x70,
	0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x12, 0x2e, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x57, 0x68,
	0x65, 0x72, 0x65, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x1a, 0x7c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x3f, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e,
	0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x42, 0x5f,
	0x0a, 0x18, 0x6f, 0x72, 0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x42, 0x11, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2d, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x64, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x3b, 0x73, 0x71, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mojo_db_sql_upsert_clause_proto_rawDescOnce sync.Once
	file_mojo_db_sql_upsert_clause_proto_rawDescData = file_mojo_db_sql_upsert_clause_proto_rawDesc
)

func file_mojo_db_sql_upsert_clause_proto_rawDescGZIP() []byte {
	file_mojo_db_sql_upsert_clause_proto_rawDescOnce.Do(func() {
		file_mojo_db_sql_upsert_clause_proto_rawDescData = protoimpl.X.CompressGZIP(file_mojo_db_sql_upsert_clause_proto_rawDescData)
	})
	return file_mojo_db_sql_upsert_clause_proto_rawDescData
}

var file_mojo_db_sql_upsert_clause_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mojo_db_sql_upsert_clause_proto_goTypes = []interface{}{
	(*UpsertClause)(nil),           // 0: mojo.db.sql.UpsertClause
	(*UpsertClause_Conflict)(nil),  // 1: mojo.db.sql.UpsertClause.Conflict
	(*UpsertClause_UpdateSet)(nil), // 2: mojo.db.sql.UpsertClause.UpdateSet
	(*lang.Position)(nil),          // 3: mojo.lang.Position
	(*IndexedColumn)(nil),          // 4: mojo.db.sql.IndexedColumn
	(*WhereClause)(nil),            // 5: mojo.db.sql.WhereClause
	(*ColumnAssignment)(nil),       // 6: mojo.db.sql.ColumnAssignment
}
var file_mojo_db_sql_upsert_clause_proto_depIdxs = []int32{
	3, // 0: mojo.db.sql.UpsertClause.start_position:type_name -> mojo.lang.Position
	3, // 1: mojo.db.sql.UpsertClause.end_position:type_name -> mojo.lang.Position
	1, // 2: mojo.db.sql.UpsertClause.conflict:type_name -> mojo.db.sql.UpsertClause.Conflict
	2, // 3: mojo.db.sql.UpsertClause.update_set:type_name -> mojo.db.sql.UpsertClause.UpdateSet
	4, // 4: mojo.db.sql.UpsertClause.Conflict.columns:type_name -> mojo.db.sql.IndexedColumn
	5, // 5: mojo.db.sql.UpsertClause.Conflict.where:type_name -> mojo.db.sql.WhereClause
	6, // 6: mojo.db.sql.UpsertClause.UpdateSet.assignments:type_name -> mojo.db.sql.ColumnAssignment
	5, // 7: mojo.db.sql.UpsertClause.UpdateSet.where:type_name -> mojo.db.sql.WhereClause
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_mojo_db_sql_upsert_clause_proto_init() }
func file_mojo_db_sql_upsert_clause_proto_init() {
	if File_mojo_db_sql_upsert_clause_proto != nil {
		return
	}
	file_mojo_db_sql_clause_proto_init()
	file_mojo_db_sql_indexed_column_proto_init()
	file_mojo_db_sql_set_clause_proto_init()
	file_mojo_db_sql_sql_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mojo_db_sql_upsert_clause_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertClause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_db_sql_upsert_clause_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertClause_Conflict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_db_sql_upsert_clause_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertClause_UpdateSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mojo_db_sql_upsert_clause_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mojo_db_sql_upsert_clause_proto_goTypes,
		DependencyIndexes: file_mojo_db_sql_upsert_clause_proto_depIdxs,
		MessageInfos:      file_mojo_db_sql_upsert_clause_proto_msgTypes,
	}.Build()
	File_mojo_db_sql_upsert_clause_proto = out.File
	file_mojo_db_sql_upsert_clause_proto_rawDesc = nil
	file_mojo_db_sql_upsert_clause_proto_goTypes = nil
	file_mojo_db_sql_upsert_clause_proto_depIdxs = nil
}
