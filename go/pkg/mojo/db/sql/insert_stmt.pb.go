// Code generated by mojo. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: mojo/db/sql/insert_stmt.proto

package sql

import (
	lang "github.com/mojo-lang/lang/go/pkg/mojo/lang"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InsertStmt_Type int32

const (
	InsertStmt_TYPE_INSERT             InsertStmt_Type = 0
	InsertStmt_TYPE_REPLACE            InsertStmt_Type = 1
	InsertStmt_TYPE_INSERT_OR_REPLACE  InsertStmt_Type = 5
	InsertStmt_TYPE_INSERT_OR_ROLLBACK InsertStmt_Type = 6
	InsertStmt_TYPE_INSERT_OR_ABORT    InsertStmt_Type = 7
	InsertStmt_TYPE_INSERT_OR_FAIL     InsertStmt_Type = 8
	InsertStmt_TYPE_INSERT_OR_IGNORE   InsertStmt_Type = 9
)

// Enum value maps for InsertStmt_Type.
var (
	InsertStmt_Type_name = map[int32]string{
		0: "TYPE_INSERT",
		1: "TYPE_REPLACE",
		5: "TYPE_INSERT_OR_REPLACE",
		6: "TYPE_INSERT_OR_ROLLBACK",
		7: "TYPE_INSERT_OR_ABORT",
		8: "TYPE_INSERT_OR_FAIL",
		9: "TYPE_INSERT_OR_IGNORE",
	}
	InsertStmt_Type_value = map[string]int32{
		"TYPE_INSERT":             0,
		"TYPE_REPLACE":            1,
		"TYPE_INSERT_OR_REPLACE":  5,
		"TYPE_INSERT_OR_ROLLBACK": 6,
		"TYPE_INSERT_OR_ABORT":    7,
		"TYPE_INSERT_OR_FAIL":     8,
		"TYPE_INSERT_OR_IGNORE":   9,
	}
)

func (x InsertStmt_Type) Enum() *InsertStmt_Type {
	p := new(InsertStmt_Type)
	*p = x
	return p
}

func (x InsertStmt_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InsertStmt_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_mojo_db_sql_insert_stmt_proto_enumTypes[0].Descriptor()
}

func (InsertStmt_Type) Type() protoreflect.EnumType {
	return &file_mojo_db_sql_insert_stmt_proto_enumTypes[0]
}

func (x InsertStmt_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InsertStmt_Type.Descriptor instead.
func (InsertStmt_Type) EnumDescriptor() ([]byte, []int) {
	return file_mojo_db_sql_insert_stmt_proto_rawDescGZIP(), []int{0, 0}
}

type InsertStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartPosition *lang.Position  `protobuf:"bytes,1,opt,name=start_position,json=startPosition,proto3" json:"startPosition,omitempty"`
	EndPosition   *lang.Position  `protobuf:"bytes,2,opt,name=end_position,json=endPosition,proto3" json:"endPosition,omitempty"`
	Kind          int64           `protobuf:"varint,4,opt,name=kind,proto3" json:"kind,omitempty"`
	Implicit      bool            `protobuf:"varint,5,opt,name=implicit,proto3" json:"implicit,omitempty"`
	With          *WithClause     `protobuf:"bytes,10,opt,name=with,proto3" json:"with,omitempty"`
	Type          InsertStmt_Type `protobuf:"varint,11,opt,name=type,proto3,enum=mojo.db.sql.InsertStmt_Type" json:"type,omitempty"`
	Into          *IntoClause     `protobuf:"bytes,12,opt,name=into,proto3" json:"into,omitempty"`
	// Types that are assignable to Values:
	//	*InsertStmt_ValuesClause
	//	*InsertStmt_SelectStmt
	Values    isInsertStmt_Values `protobuf_oneof:"values" json:"values,omitempty"`
	Upsert    *UpsertClause       `protobuf:"bytes,15,opt,name=upsert,proto3" json:"upsert,omitempty"`
	Returning *ReturningClause    `protobuf:"bytes,16,opt,name=returning,proto3" json:"returning,omitempty"`
}

func (x *InsertStmt) Reset() {
	*x = InsertStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_db_sql_insert_stmt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertStmt) ProtoMessage() {}

func (x *InsertStmt) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_db_sql_insert_stmt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertStmt.ProtoReflect.Descriptor instead.
func (*InsertStmt) Descriptor() ([]byte, []int) {
	return file_mojo_db_sql_insert_stmt_proto_rawDescGZIP(), []int{0}
}

func (x *InsertStmt) GetStartPosition() *lang.Position {
	if x != nil {
		return x.StartPosition
	}
	return nil
}

func (x *InsertStmt) GetEndPosition() *lang.Position {
	if x != nil {
		return x.EndPosition
	}
	return nil
}

func (x *InsertStmt) GetKind() int64 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *InsertStmt) GetImplicit() bool {
	if x != nil {
		return x.Implicit
	}
	return false
}

func (x *InsertStmt) GetWith() *WithClause {
	if x != nil {
		return x.With
	}
	return nil
}

func (x *InsertStmt) GetType() InsertStmt_Type {
	if x != nil {
		return x.Type
	}
	return InsertStmt_TYPE_INSERT
}

func (x *InsertStmt) GetInto() *IntoClause {
	if x != nil {
		return x.Into
	}
	return nil
}

func (m *InsertStmt) GetValues() isInsertStmt_Values {
	if m != nil {
		return m.Values
	}
	return nil
}

func (x *InsertStmt) GetValuesClause() *ValuesClause {
	if x, ok := x.GetValues().(*InsertStmt_ValuesClause); ok {
		return x.ValuesClause
	}
	return nil
}

func (x *InsertStmt) GetSelectStmt() *SelectStmt {
	if x, ok := x.GetValues().(*InsertStmt_SelectStmt); ok {
		return x.SelectStmt
	}
	return nil
}

func (x *InsertStmt) GetUpsert() *UpsertClause {
	if x != nil {
		return x.Upsert
	}
	return nil
}

func (x *InsertStmt) GetReturning() *ReturningClause {
	if x != nil {
		return x.Returning
	}
	return nil
}

type isInsertStmt_Values interface {
	isInsertStmt_Values()
}

type InsertStmt_ValuesClause struct {
	ValuesClause *ValuesClause `protobuf:"bytes,13,opt,name=values_clause,json=valuesClause,proto3,oneof" json:"valuesClause,omitempty"`
}

type InsertStmt_SelectStmt struct {
	SelectStmt *SelectStmt `protobuf:"bytes,14,opt,name=select_stmt,json=selectStmt,proto3,oneof" json:"selectStmt,omitempty"`
}

func (*InsertStmt_ValuesClause) isInsertStmt_Values() {}

func (*InsertStmt_SelectStmt) isInsertStmt_Values() {}

var File_mojo_db_sql_insert_stmt_proto protoreflect.FileDescriptor

var file_mojo_db_sql_insert_stmt_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x1a, 0x28, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x6d, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f,
	0x73, 0x71, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73,
	0x71, 0x6c, 0x2f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6c, 0x61,
	0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f,
	0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x2f, 0x75, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6c, 0x61, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x05, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65,
	0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x77, 0x69,
	0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x61, 0x75, 0x73,
	0x65, 0x52, 0x04, 0x77, 0x69, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e,
	0x73, 0x71, 0x6c, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x74,
	0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x6f, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65,
	0x52, 0x04, 0x69, 0x6e, 0x74, 0x6f, 0x12, 0x40, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x5f, 0x63, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6d, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73,
	0x71, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x52,
	0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x22, 0xb0, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x5f, 0x4f,
	0x52, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x5f, 0x52, 0x4f,
	0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54,
	0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52,
	0x54, 0x5f, 0x4f, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x5f, 0x49, 0x47,
	0x4e, 0x4f, 0x52, 0x45, 0x10, 0x09, 0x42, 0x08, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x42, 0x5d, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x71, 0x6c, 0x42, 0x0f, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2d, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x64, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x3b, 0x73, 0x71, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mojo_db_sql_insert_stmt_proto_rawDescOnce sync.Once
	file_mojo_db_sql_insert_stmt_proto_rawDescData = file_mojo_db_sql_insert_stmt_proto_rawDesc
)

func file_mojo_db_sql_insert_stmt_proto_rawDescGZIP() []byte {
	file_mojo_db_sql_insert_stmt_proto_rawDescOnce.Do(func() {
		file_mojo_db_sql_insert_stmt_proto_rawDescData = protoimpl.X.CompressGZIP(file_mojo_db_sql_insert_stmt_proto_rawDescData)
	})
	return file_mojo_db_sql_insert_stmt_proto_rawDescData
}

var file_mojo_db_sql_insert_stmt_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mojo_db_sql_insert_stmt_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_mojo_db_sql_insert_stmt_proto_goTypes = []interface{}{
	(InsertStmt_Type)(0),    // 0: mojo.db.sql.InsertStmt.Type
	(*InsertStmt)(nil),      // 1: mojo.db.sql.InsertStmt
	(*lang.Position)(nil),   // 2: mojo.lang.Position
	(*WithClause)(nil),      // 3: mojo.db.sql.WithClause
	(*IntoClause)(nil),      // 4: mojo.db.sql.IntoClause
	(*ValuesClause)(nil),    // 5: mojo.db.sql.ValuesClause
	(*SelectStmt)(nil),      // 6: mojo.db.sql.SelectStmt
	(*UpsertClause)(nil),    // 7: mojo.db.sql.UpsertClause
	(*ReturningClause)(nil), // 8: mojo.db.sql.ReturningClause
}
var file_mojo_db_sql_insert_stmt_proto_depIdxs = []int32{
	2, // 0: mojo.db.sql.InsertStmt.start_position:type_name -> mojo.lang.Position
	2, // 1: mojo.db.sql.InsertStmt.end_position:type_name -> mojo.lang.Position
	3, // 2: mojo.db.sql.InsertStmt.with:type_name -> mojo.db.sql.WithClause
	0, // 3: mojo.db.sql.InsertStmt.type:type_name -> mojo.db.sql.InsertStmt.Type
	4, // 4: mojo.db.sql.InsertStmt.into:type_name -> mojo.db.sql.IntoClause
	5, // 5: mojo.db.sql.InsertStmt.values_clause:type_name -> mojo.db.sql.ValuesClause
	6, // 6: mojo.db.sql.InsertStmt.select_stmt:type_name -> mojo.db.sql.SelectStmt
	7, // 7: mojo.db.sql.InsertStmt.upsert:type_name -> mojo.db.sql.UpsertClause
	8, // 8: mojo.db.sql.InsertStmt.returning:type_name -> mojo.db.sql.ReturningClause
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_mojo_db_sql_insert_stmt_proto_init() }
func file_mojo_db_sql_insert_stmt_proto_init() {
	if File_mojo_db_sql_insert_stmt_proto != nil {
		return
	}
	file_mojo_db_sql_data_manipulation_stmt_proto_init()
	file_mojo_db_sql_into_clause_proto_init()
	file_mojo_db_sql_returning_clause_proto_init()
	file_mojo_db_sql_sql_proto_init()
	file_mojo_db_sql_upsert_clause_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mojo_db_sql_insert_stmt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mojo_db_sql_insert_stmt_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*InsertStmt_ValuesClause)(nil),
		(*InsertStmt_SelectStmt)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mojo_db_sql_insert_stmt_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mojo_db_sql_insert_stmt_proto_goTypes,
		DependencyIndexes: file_mojo_db_sql_insert_stmt_proto_depIdxs,
		EnumInfos:         file_mojo_db_sql_insert_stmt_proto_enumTypes,
		MessageInfos:      file_mojo_db_sql_insert_stmt_proto_msgTypes,
	}.Build()
	File_mojo_db_sql_insert_stmt_proto = out.File
	file_mojo_db_sql_insert_stmt_proto_rawDesc = nil
	file_mojo_db_sql_insert_stmt_proto_goTypes = nil
	file_mojo_db_sql_insert_stmt_proto_depIdxs = nil
}
