// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mojo/db/sql/sql.proto

package org.mojolang.mojo.db.sql;

/**
 * Protobuf type {@code mojo.db.sql.Table}
 */
public final class Table extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:mojo.db.sql.Table)
    TableOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Table.newBuilder() to construct.
  private Table(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Table() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Table();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.mojolang.mojo.db.sql.SqlProto.internal_static_mojo_db_sql_Table_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.mojolang.mojo.db.sql.SqlProto.internal_static_mojo_db_sql_Table_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.mojolang.mojo.db.sql.Table.class, org.mojolang.mojo.db.sql.Table.Builder.class);
  }

  private int tableCase_ = 0;
  private java.lang.Object table_;
  public enum TableCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TABLE_NAME_VAL(1),
    TABLE_FUNCTION_NAME_VAL(2),
    TABLE_QUERY_VAL(3),
    TABLE_NOT_SET(0);
    private final int value;
    private TableCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TableCase valueOf(int value) {
      return forNumber(value);
    }

    public static TableCase forNumber(int value) {
      switch (value) {
        case 1: return TABLE_NAME_VAL;
        case 2: return TABLE_FUNCTION_NAME_VAL;
        case 3: return TABLE_QUERY_VAL;
        case 0: return TABLE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TableCase
  getTableCase() {
    return TableCase.forNumber(
        tableCase_);
  }

  public static final int TABLE_NAME_VAL_FIELD_NUMBER = 1;
  /**
   * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
   * @return Whether the tableNameVal field is set.
   */
  @java.lang.Override
  public boolean hasTableNameVal() {
    return tableCase_ == 1;
  }
  /**
   * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
   * @return The tableNameVal.
   */
  @java.lang.Override
  public org.mojolang.mojo.db.sql.TableName getTableNameVal() {
    if (tableCase_ == 1) {
       return (org.mojolang.mojo.db.sql.TableName) table_;
    }
    return org.mojolang.mojo.db.sql.TableName.getDefaultInstance();
  }
  /**
   * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
   */
  @java.lang.Override
  public org.mojolang.mojo.db.sql.TableNameOrBuilder getTableNameValOrBuilder() {
    if (tableCase_ == 1) {
       return (org.mojolang.mojo.db.sql.TableName) table_;
    }
    return org.mojolang.mojo.db.sql.TableName.getDefaultInstance();
  }

  public static final int TABLE_FUNCTION_NAME_VAL_FIELD_NUMBER = 2;
  /**
   * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
   * @return Whether the tableFunctionNameVal field is set.
   */
  @java.lang.Override
  public boolean hasTableFunctionNameVal() {
    return tableCase_ == 2;
  }
  /**
   * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
   * @return The tableFunctionNameVal.
   */
  @java.lang.Override
  public org.mojolang.mojo.db.sql.TableFunctionName getTableFunctionNameVal() {
    if (tableCase_ == 2) {
       return (org.mojolang.mojo.db.sql.TableFunctionName) table_;
    }
    return org.mojolang.mojo.db.sql.TableFunctionName.getDefaultInstance();
  }
  /**
   * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
   */
  @java.lang.Override
  public org.mojolang.mojo.db.sql.TableFunctionNameOrBuilder getTableFunctionNameValOrBuilder() {
    if (tableCase_ == 2) {
       return (org.mojolang.mojo.db.sql.TableFunctionName) table_;
    }
    return org.mojolang.mojo.db.sql.TableFunctionName.getDefaultInstance();
  }

  public static final int TABLE_QUERY_VAL_FIELD_NUMBER = 3;
  /**
   * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
   * @return Whether the tableQueryVal field is set.
   */
  @java.lang.Override
  public boolean hasTableQueryVal() {
    return tableCase_ == 3;
  }
  /**
   * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
   * @return The tableQueryVal.
   */
  @java.lang.Override
  public org.mojolang.mojo.db.sql.TableQuery getTableQueryVal() {
    if (tableCase_ == 3) {
       return (org.mojolang.mojo.db.sql.TableQuery) table_;
    }
    return org.mojolang.mojo.db.sql.TableQuery.getDefaultInstance();
  }
  /**
   * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
   */
  @java.lang.Override
  public org.mojolang.mojo.db.sql.TableQueryOrBuilder getTableQueryValOrBuilder() {
    if (tableCase_ == 3) {
       return (org.mojolang.mojo.db.sql.TableQuery) table_;
    }
    return org.mojolang.mojo.db.sql.TableQuery.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (tableCase_ == 1) {
      output.writeMessage(1, (org.mojolang.mojo.db.sql.TableName) table_);
    }
    if (tableCase_ == 2) {
      output.writeMessage(2, (org.mojolang.mojo.db.sql.TableFunctionName) table_);
    }
    if (tableCase_ == 3) {
      output.writeMessage(3, (org.mojolang.mojo.db.sql.TableQuery) table_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (tableCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.mojolang.mojo.db.sql.TableName) table_);
    }
    if (tableCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.mojolang.mojo.db.sql.TableFunctionName) table_);
    }
    if (tableCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.mojolang.mojo.db.sql.TableQuery) table_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.mojolang.mojo.db.sql.Table)) {
      return super.equals(obj);
    }
    org.mojolang.mojo.db.sql.Table other = (org.mojolang.mojo.db.sql.Table) obj;

    if (!getTableCase().equals(other.getTableCase())) return false;
    switch (tableCase_) {
      case 1:
        if (!getTableNameVal()
            .equals(other.getTableNameVal())) return false;
        break;
      case 2:
        if (!getTableFunctionNameVal()
            .equals(other.getTableFunctionNameVal())) return false;
        break;
      case 3:
        if (!getTableQueryVal()
            .equals(other.getTableQueryVal())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (tableCase_) {
      case 1:
        hash = (37 * hash) + TABLE_NAME_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getTableNameVal().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TABLE_FUNCTION_NAME_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getTableFunctionNameVal().hashCode();
        break;
      case 3:
        hash = (37 * hash) + TABLE_QUERY_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getTableQueryVal().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.mojolang.mojo.db.sql.Table parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.mojolang.mojo.db.sql.Table parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.mojolang.mojo.db.sql.Table parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.mojolang.mojo.db.sql.Table parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.mojolang.mojo.db.sql.Table parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.mojolang.mojo.db.sql.Table parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.mojolang.mojo.db.sql.Table parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.mojolang.mojo.db.sql.Table parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.mojolang.mojo.db.sql.Table parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.mojolang.mojo.db.sql.Table parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.mojolang.mojo.db.sql.Table parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.mojolang.mojo.db.sql.Table parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.mojolang.mojo.db.sql.Table prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code mojo.db.sql.Table}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:mojo.db.sql.Table)
      org.mojolang.mojo.db.sql.TableOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mojolang.mojo.db.sql.SqlProto.internal_static_mojo_db_sql_Table_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mojolang.mojo.db.sql.SqlProto.internal_static_mojo_db_sql_Table_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.mojolang.mojo.db.sql.Table.class, org.mojolang.mojo.db.sql.Table.Builder.class);
    }

    // Construct using org.mojolang.mojo.db.sql.Table.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (tableNameValBuilder_ != null) {
        tableNameValBuilder_.clear();
      }
      if (tableFunctionNameValBuilder_ != null) {
        tableFunctionNameValBuilder_.clear();
      }
      if (tableQueryValBuilder_ != null) {
        tableQueryValBuilder_.clear();
      }
      tableCase_ = 0;
      table_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.mojolang.mojo.db.sql.SqlProto.internal_static_mojo_db_sql_Table_descriptor;
    }

    @java.lang.Override
    public org.mojolang.mojo.db.sql.Table getDefaultInstanceForType() {
      return org.mojolang.mojo.db.sql.Table.getDefaultInstance();
    }

    @java.lang.Override
    public org.mojolang.mojo.db.sql.Table build() {
      org.mojolang.mojo.db.sql.Table result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.mojolang.mojo.db.sql.Table buildPartial() {
      org.mojolang.mojo.db.sql.Table result = new org.mojolang.mojo.db.sql.Table(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(org.mojolang.mojo.db.sql.Table result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(org.mojolang.mojo.db.sql.Table result) {
      result.tableCase_ = tableCase_;
      result.table_ = this.table_;
      if (tableCase_ == 1 &&
          tableNameValBuilder_ != null) {
        result.table_ = tableNameValBuilder_.build();
      }
      if (tableCase_ == 2 &&
          tableFunctionNameValBuilder_ != null) {
        result.table_ = tableFunctionNameValBuilder_.build();
      }
      if (tableCase_ == 3 &&
          tableQueryValBuilder_ != null) {
        result.table_ = tableQueryValBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.mojolang.mojo.db.sql.Table) {
        return mergeFrom((org.mojolang.mojo.db.sql.Table)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.mojolang.mojo.db.sql.Table other) {
      if (other == org.mojolang.mojo.db.sql.Table.getDefaultInstance()) return this;
      switch (other.getTableCase()) {
        case TABLE_NAME_VAL: {
          mergeTableNameVal(other.getTableNameVal());
          break;
        }
        case TABLE_FUNCTION_NAME_VAL: {
          mergeTableFunctionNameVal(other.getTableFunctionNameVal());
          break;
        }
        case TABLE_QUERY_VAL: {
          mergeTableQueryVal(other.getTableQueryVal());
          break;
        }
        case TABLE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTableNameValFieldBuilder().getBuilder(),
                  extensionRegistry);
              tableCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getTableFunctionNameValFieldBuilder().getBuilder(),
                  extensionRegistry);
              tableCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getTableQueryValFieldBuilder().getBuilder(),
                  extensionRegistry);
              tableCase_ = 3;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int tableCase_ = 0;
    private java.lang.Object table_;
    public TableCase
        getTableCase() {
      return TableCase.forNumber(
          tableCase_);
    }

    public Builder clearTable() {
      tableCase_ = 0;
      table_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.db.sql.TableName, org.mojolang.mojo.db.sql.TableName.Builder, org.mojolang.mojo.db.sql.TableNameOrBuilder> tableNameValBuilder_;
    /**
     * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
     * @return Whether the tableNameVal field is set.
     */
    @java.lang.Override
    public boolean hasTableNameVal() {
      return tableCase_ == 1;
    }
    /**
     * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
     * @return The tableNameVal.
     */
    @java.lang.Override
    public org.mojolang.mojo.db.sql.TableName getTableNameVal() {
      if (tableNameValBuilder_ == null) {
        if (tableCase_ == 1) {
          return (org.mojolang.mojo.db.sql.TableName) table_;
        }
        return org.mojolang.mojo.db.sql.TableName.getDefaultInstance();
      } else {
        if (tableCase_ == 1) {
          return tableNameValBuilder_.getMessage();
        }
        return org.mojolang.mojo.db.sql.TableName.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
     */
    public Builder setTableNameVal(org.mojolang.mojo.db.sql.TableName value) {
      if (tableNameValBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        table_ = value;
        onChanged();
      } else {
        tableNameValBuilder_.setMessage(value);
      }
      tableCase_ = 1;
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
     */
    public Builder setTableNameVal(
        org.mojolang.mojo.db.sql.TableName.Builder builderForValue) {
      if (tableNameValBuilder_ == null) {
        table_ = builderForValue.build();
        onChanged();
      } else {
        tableNameValBuilder_.setMessage(builderForValue.build());
      }
      tableCase_ = 1;
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
     */
    public Builder mergeTableNameVal(org.mojolang.mojo.db.sql.TableName value) {
      if (tableNameValBuilder_ == null) {
        if (tableCase_ == 1 &&
            table_ != org.mojolang.mojo.db.sql.TableName.getDefaultInstance()) {
          table_ = org.mojolang.mojo.db.sql.TableName.newBuilder((org.mojolang.mojo.db.sql.TableName) table_)
              .mergeFrom(value).buildPartial();
        } else {
          table_ = value;
        }
        onChanged();
      } else {
        if (tableCase_ == 1) {
          tableNameValBuilder_.mergeFrom(value);
        } else {
          tableNameValBuilder_.setMessage(value);
        }
      }
      tableCase_ = 1;
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
     */
    public Builder clearTableNameVal() {
      if (tableNameValBuilder_ == null) {
        if (tableCase_ == 1) {
          tableCase_ = 0;
          table_ = null;
          onChanged();
        }
      } else {
        if (tableCase_ == 1) {
          tableCase_ = 0;
          table_ = null;
        }
        tableNameValBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
     */
    public org.mojolang.mojo.db.sql.TableName.Builder getTableNameValBuilder() {
      return getTableNameValFieldBuilder().getBuilder();
    }
    /**
     * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
     */
    @java.lang.Override
    public org.mojolang.mojo.db.sql.TableNameOrBuilder getTableNameValOrBuilder() {
      if ((tableCase_ == 1) && (tableNameValBuilder_ != null)) {
        return tableNameValBuilder_.getMessageOrBuilder();
      } else {
        if (tableCase_ == 1) {
          return (org.mojolang.mojo.db.sql.TableName) table_;
        }
        return org.mojolang.mojo.db.sql.TableName.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.db.sql.TableName table_name_val = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.db.sql.TableName, org.mojolang.mojo.db.sql.TableName.Builder, org.mojolang.mojo.db.sql.TableNameOrBuilder> 
        getTableNameValFieldBuilder() {
      if (tableNameValBuilder_ == null) {
        if (!(tableCase_ == 1)) {
          table_ = org.mojolang.mojo.db.sql.TableName.getDefaultInstance();
        }
        tableNameValBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.mojolang.mojo.db.sql.TableName, org.mojolang.mojo.db.sql.TableName.Builder, org.mojolang.mojo.db.sql.TableNameOrBuilder>(
                (org.mojolang.mojo.db.sql.TableName) table_,
                getParentForChildren(),
                isClean());
        table_ = null;
      }
      tableCase_ = 1;
      onChanged();
      return tableNameValBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.db.sql.TableFunctionName, org.mojolang.mojo.db.sql.TableFunctionName.Builder, org.mojolang.mojo.db.sql.TableFunctionNameOrBuilder> tableFunctionNameValBuilder_;
    /**
     * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
     * @return Whether the tableFunctionNameVal field is set.
     */
    @java.lang.Override
    public boolean hasTableFunctionNameVal() {
      return tableCase_ == 2;
    }
    /**
     * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
     * @return The tableFunctionNameVal.
     */
    @java.lang.Override
    public org.mojolang.mojo.db.sql.TableFunctionName getTableFunctionNameVal() {
      if (tableFunctionNameValBuilder_ == null) {
        if (tableCase_ == 2) {
          return (org.mojolang.mojo.db.sql.TableFunctionName) table_;
        }
        return org.mojolang.mojo.db.sql.TableFunctionName.getDefaultInstance();
      } else {
        if (tableCase_ == 2) {
          return tableFunctionNameValBuilder_.getMessage();
        }
        return org.mojolang.mojo.db.sql.TableFunctionName.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
     */
    public Builder setTableFunctionNameVal(org.mojolang.mojo.db.sql.TableFunctionName value) {
      if (tableFunctionNameValBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        table_ = value;
        onChanged();
      } else {
        tableFunctionNameValBuilder_.setMessage(value);
      }
      tableCase_ = 2;
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
     */
    public Builder setTableFunctionNameVal(
        org.mojolang.mojo.db.sql.TableFunctionName.Builder builderForValue) {
      if (tableFunctionNameValBuilder_ == null) {
        table_ = builderForValue.build();
        onChanged();
      } else {
        tableFunctionNameValBuilder_.setMessage(builderForValue.build());
      }
      tableCase_ = 2;
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
     */
    public Builder mergeTableFunctionNameVal(org.mojolang.mojo.db.sql.TableFunctionName value) {
      if (tableFunctionNameValBuilder_ == null) {
        if (tableCase_ == 2 &&
            table_ != org.mojolang.mojo.db.sql.TableFunctionName.getDefaultInstance()) {
          table_ = org.mojolang.mojo.db.sql.TableFunctionName.newBuilder((org.mojolang.mojo.db.sql.TableFunctionName) table_)
              .mergeFrom(value).buildPartial();
        } else {
          table_ = value;
        }
        onChanged();
      } else {
        if (tableCase_ == 2) {
          tableFunctionNameValBuilder_.mergeFrom(value);
        } else {
          tableFunctionNameValBuilder_.setMessage(value);
        }
      }
      tableCase_ = 2;
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
     */
    public Builder clearTableFunctionNameVal() {
      if (tableFunctionNameValBuilder_ == null) {
        if (tableCase_ == 2) {
          tableCase_ = 0;
          table_ = null;
          onChanged();
        }
      } else {
        if (tableCase_ == 2) {
          tableCase_ = 0;
          table_ = null;
        }
        tableFunctionNameValBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
     */
    public org.mojolang.mojo.db.sql.TableFunctionName.Builder getTableFunctionNameValBuilder() {
      return getTableFunctionNameValFieldBuilder().getBuilder();
    }
    /**
     * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
     */
    @java.lang.Override
    public org.mojolang.mojo.db.sql.TableFunctionNameOrBuilder getTableFunctionNameValOrBuilder() {
      if ((tableCase_ == 2) && (tableFunctionNameValBuilder_ != null)) {
        return tableFunctionNameValBuilder_.getMessageOrBuilder();
      } else {
        if (tableCase_ == 2) {
          return (org.mojolang.mojo.db.sql.TableFunctionName) table_;
        }
        return org.mojolang.mojo.db.sql.TableFunctionName.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.db.sql.TableFunctionName table_function_name_val = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.db.sql.TableFunctionName, org.mojolang.mojo.db.sql.TableFunctionName.Builder, org.mojolang.mojo.db.sql.TableFunctionNameOrBuilder> 
        getTableFunctionNameValFieldBuilder() {
      if (tableFunctionNameValBuilder_ == null) {
        if (!(tableCase_ == 2)) {
          table_ = org.mojolang.mojo.db.sql.TableFunctionName.getDefaultInstance();
        }
        tableFunctionNameValBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.mojolang.mojo.db.sql.TableFunctionName, org.mojolang.mojo.db.sql.TableFunctionName.Builder, org.mojolang.mojo.db.sql.TableFunctionNameOrBuilder>(
                (org.mojolang.mojo.db.sql.TableFunctionName) table_,
                getParentForChildren(),
                isClean());
        table_ = null;
      }
      tableCase_ = 2;
      onChanged();
      return tableFunctionNameValBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.db.sql.TableQuery, org.mojolang.mojo.db.sql.TableQuery.Builder, org.mojolang.mojo.db.sql.TableQueryOrBuilder> tableQueryValBuilder_;
    /**
     * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
     * @return Whether the tableQueryVal field is set.
     */
    @java.lang.Override
    public boolean hasTableQueryVal() {
      return tableCase_ == 3;
    }
    /**
     * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
     * @return The tableQueryVal.
     */
    @java.lang.Override
    public org.mojolang.mojo.db.sql.TableQuery getTableQueryVal() {
      if (tableQueryValBuilder_ == null) {
        if (tableCase_ == 3) {
          return (org.mojolang.mojo.db.sql.TableQuery) table_;
        }
        return org.mojolang.mojo.db.sql.TableQuery.getDefaultInstance();
      } else {
        if (tableCase_ == 3) {
          return tableQueryValBuilder_.getMessage();
        }
        return org.mojolang.mojo.db.sql.TableQuery.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
     */
    public Builder setTableQueryVal(org.mojolang.mojo.db.sql.TableQuery value) {
      if (tableQueryValBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        table_ = value;
        onChanged();
      } else {
        tableQueryValBuilder_.setMessage(value);
      }
      tableCase_ = 3;
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
     */
    public Builder setTableQueryVal(
        org.mojolang.mojo.db.sql.TableQuery.Builder builderForValue) {
      if (tableQueryValBuilder_ == null) {
        table_ = builderForValue.build();
        onChanged();
      } else {
        tableQueryValBuilder_.setMessage(builderForValue.build());
      }
      tableCase_ = 3;
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
     */
    public Builder mergeTableQueryVal(org.mojolang.mojo.db.sql.TableQuery value) {
      if (tableQueryValBuilder_ == null) {
        if (tableCase_ == 3 &&
            table_ != org.mojolang.mojo.db.sql.TableQuery.getDefaultInstance()) {
          table_ = org.mojolang.mojo.db.sql.TableQuery.newBuilder((org.mojolang.mojo.db.sql.TableQuery) table_)
              .mergeFrom(value).buildPartial();
        } else {
          table_ = value;
        }
        onChanged();
      } else {
        if (tableCase_ == 3) {
          tableQueryValBuilder_.mergeFrom(value);
        } else {
          tableQueryValBuilder_.setMessage(value);
        }
      }
      tableCase_ = 3;
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
     */
    public Builder clearTableQueryVal() {
      if (tableQueryValBuilder_ == null) {
        if (tableCase_ == 3) {
          tableCase_ = 0;
          table_ = null;
          onChanged();
        }
      } else {
        if (tableCase_ == 3) {
          tableCase_ = 0;
          table_ = null;
        }
        tableQueryValBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
     */
    public org.mojolang.mojo.db.sql.TableQuery.Builder getTableQueryValBuilder() {
      return getTableQueryValFieldBuilder().getBuilder();
    }
    /**
     * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
     */
    @java.lang.Override
    public org.mojolang.mojo.db.sql.TableQueryOrBuilder getTableQueryValOrBuilder() {
      if ((tableCase_ == 3) && (tableQueryValBuilder_ != null)) {
        return tableQueryValBuilder_.getMessageOrBuilder();
      } else {
        if (tableCase_ == 3) {
          return (org.mojolang.mojo.db.sql.TableQuery) table_;
        }
        return org.mojolang.mojo.db.sql.TableQuery.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.db.sql.TableQuery table_query_val = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.db.sql.TableQuery, org.mojolang.mojo.db.sql.TableQuery.Builder, org.mojolang.mojo.db.sql.TableQueryOrBuilder> 
        getTableQueryValFieldBuilder() {
      if (tableQueryValBuilder_ == null) {
        if (!(tableCase_ == 3)) {
          table_ = org.mojolang.mojo.db.sql.TableQuery.getDefaultInstance();
        }
        tableQueryValBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.mojolang.mojo.db.sql.TableQuery, org.mojolang.mojo.db.sql.TableQuery.Builder, org.mojolang.mojo.db.sql.TableQueryOrBuilder>(
                (org.mojolang.mojo.db.sql.TableQuery) table_,
                getParentForChildren(),
                isClean());
        table_ = null;
      }
      tableCase_ = 3;
      onChanged();
      return tableQueryValBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:mojo.db.sql.Table)
  }

  // @@protoc_insertion_point(class_scope:mojo.db.sql.Table)
  private static final org.mojolang.mojo.db.sql.Table DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.mojolang.mojo.db.sql.Table();
  }

  public static org.mojolang.mojo.db.sql.Table getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Table>
      PARSER = new com.google.protobuf.AbstractParser<Table>() {
    @java.lang.Override
    public Table parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Table> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Table> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.mojolang.mojo.db.sql.Table getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

